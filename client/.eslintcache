[{"C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\Lessions\\MERN_Auth\\Log_and_Reg\\MERN_Authentication\\client\\src\\index.js":"1","C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\Lessions\\MERN_Auth\\Log_and_Reg\\MERN_Authentication\\client\\src\\App.js":"2","C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\Lessions\\MERN_Auth\\Log_and_Reg\\MERN_Authentication\\client\\src\\reportWebVitals.js":"3","C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\Lessions\\MERN_Auth\\Log_and_Reg\\MERN_Authentication\\client\\src\\views\\Main.jsx":"4","C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\Lessions\\MERN_Auth\\Log_and_Reg\\MERN_Authentication\\client\\src\\components\\Form.jsx":"5","C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\Lessions\\MERN_Auth\\Log_and_Reg\\MERN_Authentication\\client\\src\\components\\ItemList.jsx":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":266,"mtime":1613436896890,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":7097,"mtime":1615947163107,"results":"11","hashOfConfig":"8"},{"size":2388,"mtime":1613596053409,"results":"12","hashOfConfig":"8"},{"size":968,"mtime":1613767121957,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1guo6bm",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\Lessions\\MERN_Auth\\Log_and_Reg\\MERN_Authentication\\client\\src\\index.js",[],["29","30"],"C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\Lessions\\MERN_Auth\\Log_and_Reg\\MERN_Authentication\\client\\src\\App.js",[],"C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\Lessions\\MERN_Auth\\Log_and_Reg\\MERN_Authentication\\client\\src\\reportWebVitals.js",[],"C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\Lessions\\MERN_Auth\\Log_and_Reg\\MERN_Authentication\\client\\src\\views\\Main.jsx",["31","32","33","34"],"C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\Lessions\\MERN_Auth\\Log_and_Reg\\MERN_Authentication\\client\\src\\components\\Form.jsx",["35","36"],"import React, { useState } from \"react\";\r\n\r\nexport default (props) => {\r\n    const { logged,  submitInput } = props;\r\n    const [ firstName, setFirstName ] = useState(\"\");\r\n    const [ lastName, setLastName ] = useState(\"\");\r\n    const [ email, setEmail ] = useState(\"\");\r\n    const [ password, setPassword ] = useState(\"\");\r\n    const [ confirmPassword, setConfirmPassword ] = useState(\"\");\r\n\r\n    const Process = (e) => {\r\n        e.preventDefault();\r\n        { \r\n            logged ?\r\n            submitInput({ email, password, confirmPassword }) :\r\n            submitInput({ firstName, lastName, email, password, confirmPassword })\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <form onSubmit={Process}>\r\n                { \r\n                    logged ?\r\n                    \"\" :\r\n                    <>\r\n                        <label>First Name:</label>\r\n                        <input type=\"text\" \r\n                        name=\"firstName\"\r\n                        value={firstName}\r\n                        onChange={ e => { setFirstName(e.target.value) } } /><br/>\r\n\r\n                        <label>Last Name:</label>\r\n                        <input type=\"text\" \r\n                        name=\"lastName\"\r\n                        value={lastName}\r\n                        onChange={ e => { setLastName(e.target.value) } } /><br/>\r\n                    </>\r\n                }\r\n\r\n                <label>Email:</label>\r\n                <input type=\"text\" \r\n                name=\"email\"\r\n                value={email}\r\n                onChange={ e => { setEmail(e.target.value) } } /><br/>\r\n                \r\n                <label>Password:</label>\r\n                <input type=\"text\" \r\n                name=\"password\"\r\n                value={password}\r\n                onChange={ e => { setPassword(e.target.value) } } /><br/>\r\n                \r\n                { \r\n                    logged ?\r\n                    \"\" :\r\n                    <>\r\n                        <label>Confirm Password:</label>\r\n                        <input type=\"text\" \r\n                        name=\"confirmPassword\"\r\n                        value={confirmPassword}\r\n                        onChange={ e => { setConfirmPassword(e.target.value) } } /><br/>\r\n                    </>\r\n                }\r\n\r\n                <input type=\"submit\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}","C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\Lessions\\MERN_Auth\\Log_and_Reg\\MERN_Authentication\\client\\src\\components\\ItemList.jsx",["37","38"],"import React from \"react\";\r\n// import DeleteButton from \"./DeleteButton\";\r\n\r\nexport default (props) => {\r\n    const { removingDOM } = props;\r\n    console.log(\"Item List\");\r\n    console.log(props);\r\n    return(\r\n        <div>\r\n            {\r\n                props.items.map((item, i) => {\r\n                    return(\r\n                        <div key={i} id={i}>\r\n                            <div style={{width: \"50%\", display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\"}}>\r\n                                <p>{item.firstName} {item.lastName}</p>\r\n                                <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                                {/* <DeleteButton id={item._id} removingDOM={() => removingDOM(item._id)} /> */}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":3,"column":10,"nodeType":"45","messageId":"46","endLine":3,"endColumn":18},{"ruleId":"47","severity":1,"message":"48","line":7,"column":1,"nodeType":"49","endLine":209,"endColumn":2},{"ruleId":"43","severity":1,"message":"50","line":11,"column":12,"nodeType":"45","messageId":"46","endLine":11,"endColumn":18},{"ruleId":"51","severity":1,"message":"52","line":35,"column":14,"nodeType":"53","messageId":"54","endLine":35,"endColumn":16},{"ruleId":"47","severity":1,"message":"48","line":3,"column":1,"nodeType":"49","endLine":69,"endColumn":2},{"ruleId":"55","severity":1,"message":"56","line":13,"column":9,"nodeType":"57","messageId":"58","endLine":17,"endColumn":10},{"ruleId":"47","severity":1,"message":"48","line":4,"column":1,"nodeType":"49","endLine":26,"endColumn":2},{"ruleId":"43","severity":1,"message":"59","line":5,"column":13,"nodeType":"45","messageId":"46","endLine":5,"endColumn":24},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'navigate' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'loaded' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'removingDOM' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]